#ifndef FABNET_PROTOCOL_H
#define FABNET_PROTOCOL_H

#include <inttypes.h>

////////////////////////////////////////////////////////////////////////
//Значение переменной
////////////////////////////////////////////////////////////////////////

//Целочисленная знаковая переменная
#define VAR_TYPE_SIGNED		  0x00
//Целочисленная беззнаковая переменная
#define VAR_TYPE_UNSIGNED	  0x01
//Вещественная переменная
#define VAR_TYPE_REAL		    0x02
//логическая переменная
#define VAR_TYPE_LOGIC		  0x03

//Значение переменной
typedef union
{
	//Целочисленная знаковая переменная
	int32_t	signed_int;
	//Целочисленная беззнаковая переменная
	uint32_t unsigned_int;
	//Вещественная переменная
	float real;
	//логическая переменная
	bool logic;
} t_var_value;

////////////////////////////////////////////////////////////////////////
//Протокол взаимодействия по сети RS484
////////////////////////////////////////////////////////////////////////

//Символ разделитель на физическом уровне
#define RS485_PHY_ESCAPE 	  0xAA

//Признак начала пакета
#define RS485_PHY_SOP 		  0xAB

//Признак конца пакета
#define RS485_PHY_EOP 		  0xAC

//Максимальный размер пакета на физическом уровне
#define RS485_PKG_SIZE      256

////////////////////////////////////////////////////////////////////////
//Заголовок пакета сети RS485
////////////////////////////////////////////////////////////////////////

typedef struct
{
	//Идентификатор отправителя
	uint16_t src_id;
	//Идентификатор получателя
	uint16_t dst_id;
	//Тип вложенного пакета
	uint8_t pkg_type;
	//Общий размер пакета
	uint8_t pkg_size;
} t_rs485_pkg_hdr;

////////////////////////////////////////////////////////////////////////
//Подтверждение на входящие пакеты
////////////////////////////////////////////////////////////////////////

//Статус обработки пакета

//Пакет принят и обработан без ошибок
#define PKG_RS485_ACK_OK		0x00
//Ошибка выполнения команды
#define PKG_RS485_ACK_ERROR		0x01

typedef struct
{
	//Статус обработки пакета
	uint8_t status;
} t_rs485_ack_pkg;

//Идентификатор пакета подтверждения на входящие пакеты
#define PKG_RS485_ACK_ID				0x01

//Размер пакета подтверждения на входящие пакеты
#define PKG_RS485_ACK_SIZE				(sizeof(t_rs485_ack_pkg) + sizeof(t_rs485_pkg_hdr) + 1)

////////////////////////////////////////////////////////////////////////
//Установка значения переменной
////////////////////////////////////////////////////////////////////////

typedef struct
{
	//Тип переменной
	uint8_t type;
	//Идентификатор переменной
	uint8_t id;
	//Значение переменной
	t_var_value value;
} t_rs485_set_var_pkg;

//Идентификатор пакета установки значения переменной
#define PKG_RS485_SET_VAR_ID			0x02

//Размер пакета установки значения переменной
#define PKG_RS485_SET_VAR_SIZE			(sizeof(t_rs485_set_var_pkg) + sizeof(t_rs485_pkg_hdr) + 1)

////////////////////////////////////////////////////////////////////////
//Запрос значения переменной
////////////////////////////////////////////////////////////////////////

typedef struct
{
	//Идентификатор переменной
	uint8_t id;
} t_rs485_get_var_pkg;

//Идентификатор пакета запроса значения переменной
#define PKG_RS485_GET_VAR_ID			0x03

//Размер пакета запроса значения переменной
#define PKG_RS485_GET_VAR_SIZE			(sizeof(t_rs485_get_var_pkg) + sizeof(t_rs485_pkg_hdr) + 1)

////////////////////////////////////////////////////////////////////////
//Возвращаемое значение переменной
////////////////////////////////////////////////////////////////////////

typedef struct
{
	//Тип переменной
	uint8_t type;
	//Идентификатор переменной
	uint8_t id;
	//Значение переменной
	t_var_value value;
} t_rs485_var_ack_pkg;

//Идентификатор пакета возвращающего значение переменной
#define PKG_RS485_VAR_ACK_ID			0x04
//Размер пакета возвращающего значение переменной
#define PKG_RS485_VAR_ACK_SIZE			(sizeof(t_rs485_var_ack_pkg) + sizeof(t_rs485_pkg_hdr) + 1)

////////////////////////////////////////////////////////////////////////
//Передаваемые данные пакета
////////////////////////////////////////////////////////////////////////

typedef union
{
	//Подтверждение на входящие пакеты
	t_rs485_ack_pkg 		ack_pkg;

	//Запрос значения переменной
	t_rs485_set_var_pkg 	set_var_pkg;
	//Установка значения переменной
	t_rs485_get_var_pkg 	get_var_pkg;
	//Возвращаемое значение переменной
	t_rs485_var_ack_pkg		var_ack_pkg;
} t_rs485_pkg_data;

////////////////////////////////////////////////////////////////////////
//Формат пакета сети RS485
////////////////////////////////////////////////////////////////////////

typedef struct
{
	//Заголовок пакета
	t_rs485_pkg_hdr hdr;
	//Данные пакета
	t_rs485_pkg_data data;
	//Контрольная сумма пакета
	uint8_t crc;
} t_rs485_pkg;

#endif
